import { NextRequest, NextResponse } from "next/server";
import prisma from "../../../../../prisma/prisma";
import { ChatServiceClientFactory } from "../../../../../grpc-client/chat-service-client";

export async function GET(
  _request: NextRequest,
  { params }: { params: { id: string } }
) {
  const { id: chatId } = params;
  const messages = await prisma.message.findMany({
    where: { chatId },
    orderBy: { created_at: "asc" },
  });
  return NextResponse.json(messages);
}

export async function POST(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  const { id: chatId } = params;
  const body = await request.json();
  const grpcChatSerivce = ChatServiceClientFactory.create();
  const chat = await grpcChatSerivce.chat({ message: body.message });
  const created_at = new Date();
  const messages = await prisma.$transaction([
    prisma.message.create({
        data: {
            is_from_user: true,
            content: body.message,
            chatId,
            created_at
        }
    }),
    prisma.message.create({
        data: {
            is_from_user: false,
            content: chat.message,
            chatId,
            created_at: new Date(created_at.getTime() + 1000)
        }
    })
  ])
  return NextResponse.json(messages);
}
