import { NextRequest, NextResponse } from "next/server";
import prisma from "../../../prisma/prisma";
import { ChatServiceClientFactory } from "../../../grpc-client/chat-service-client";

export async function GET(_request: NextRequest) {
  const chats = await prisma.chat.findMany({
    select: {
      id: true,
      messages: {
        where: { is_from_user: true },
        orderBy: { created_at: "asc" },
        take: 1,
      },
    },
    orderBy: { created_at: "desc" },
  });
  return NextResponse.json(chats);
}

export async function POST(request: NextRequest) {
  const body = await request.json();
  const grpcChatSerivce = ChatServiceClientFactory.create();
  const newChat = await grpcChatSerivce.chat({ message: body.message });
  const created_at = new Date();
  const chat = await prisma.chat.create({
    data: {
      id: newChat.chat_id,
      messages: {
        createMany: {
          data: [
            {
              content: body.message,
              created_at,
            },
            {
              remote_chat_id: newChat.chat_id,
              content: newChat.message,
              created_at: new Date(created_at.getTime() + 1000),
            },
          ],
        },
      },
    },
    select: {
      id: true,
      messages: {
        orderBy: { created_at: "asc" },
      },
    },
  });
  return NextResponse.json(chat);
}
